# Workflow to build and deploy the docs using a deploy key
name: Deploy docs to Pages

on:
  # Run on pushes to main and docs - we shouldn't need to test building for other branches
  push:
    branches: ["main", "docs"]
    paths:
      - docs/**
      - software/**
      - flake.nix
      - flake.lock
      - .github/workflows/docs.yaml
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  generate-docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          path: source
      - uses: nixbuild/nix-quick-install-action@v29
      - uses: DeterminateSystems/magic-nix-cache-action@main
      - name: Build compressed docs
        # note: impure build so we can have the copyright date correct
        # (also, non-sandboxed for internet access so doesn't matter anyway, but still...)
        run: nix build -L --impure ./source#docs.compressed
      - name: Upload docs artifact
        uses: actions/upload-artifact@v4
        with:
          name: compressed-docs
          path: result/docs.7z
          if-no-files-found: error
          retention-days: 7
          compression-level: 0 # we're already compressing with p7zip

  push-docs:
    # only run on origin repo AND main branch
    if: github.repository == 'ROAR-QUTRC/perseus-v2' && github.ref == 'refs/heads/main'

    # Allow only one concurrent deployment, cancelling previous if needed
    concurrency:
      group: "docs"
      cancel-in-progress: true

    needs: generate-docs
    runs-on: ubuntu-latest
    steps:
      - name: Download docs artifact
        uses: actions/download-artifact@v4
        with:
          name: compressed-docs
      - uses: nixbuild/nix-quick-install-action@v29
      - uses: DeterminateSystems/magic-nix-cache-action@main
      - uses: actions/checkout@v4
        with:
          path: source
      - name: Decompress docs
        run: nix run ./source#docs.decompress docs.7z docs-decompressed
      - uses: actions/checkout@v4
        with:
          repository: ROAR-QUTRC/roar-qutrc.github.io
          ref: main
          ssh-key: ${{ secrets.DOCS_DEPLOY_KEY }}
          path: docs
      - name: Update docs in checked out repo
        run: |
          rm -rf docs/*
          cp -a docs-decompressed/html/. docs/
      - name: Commit and push changes
        run: |
          cd docs
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config user.name "github-actions[bot]"
          git add .
          git commit -m "$(date +%z:%Y-%m-%dT%H:%M:%S) Automatic docs update"
          git push
