diff --git a/.gitignore b/.gitignore
index d7c3a84..f72770f 100644
--- a/.gitignore
+++ b/.gitignore
@@ -1,4 +1,3 @@
 .vscode
 build
-package.xml
-__pycache__
\ No newline at end of file
+__pycache__
diff --git a/CMakeLists.txt b/CMakeLists.txt
index 99a8ccc..32e0c2c 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -289,7 +289,7 @@ else(ROS_EDITION STREQUAL "ROS2")
   else()
     set(LIVOX_INTERFACE_TARGET "${LIVOX_INTERFACES}__rosidl_typesupport_cpp")
     add_dependencies(${PROJECT_NAME} ${LIVOX_INTERFACES})
-    get_target_property(LIVOX_INTERFACES_INCLUDE_DIRECTORIES ${LIVOX_INTERFACE_TARGET} INTERFACE_INCLUDE_DIRECTORIES)
+    #get_target_property(LIVOX_INTERFACES_INCLUDE_DIRECTORIES ${LIVOX_INTERFACE_TARGET} INTERFACE_INCLUDE_DIRECTORIES)
   endif()
 
   # include file direcotry
@@ -297,7 +297,7 @@ else(ROS_EDITION STREQUAL "ROS2")
     ${PCL_INCLUDE_DIRS}
     ${APR_INCLUDE_DIRS}
     ${LIVOX_LIDAR_SDK_INCLUDE_DIR}
-    ${LIVOX_INTERFACES_INCLUDE_DIRECTORIES}   # for custom msgs
+    #${LIVOX_INTERFACES_INCLUDE_DIRECTORIES}   # for custom msgs
     3rdparty
     src
   )
@@ -330,7 +330,7 @@ else(ROS_EDITION STREQUAL "ROS2")
 
   ament_auto_package(INSTALL_TO_SHARE
     config
-    launch_ROS2
+    launch
   )
 
-endif()
\ No newline at end of file
+endif()
diff --git a/launch_ROS2/msg_HAP_launch.py b/launch_ROS2/msg_HAP_launch.py
deleted file mode 100644
index 2ff3d66..0000000
--- a/launch_ROS2/msg_HAP_launch.py
+++ /dev/null
@@ -1,55 +0,0 @@
-import os
-from ament_index_python.packages import get_package_share_directory
-from launch import LaunchDescription
-from launch_ros.actions import Node
-import launch
-
-################### user configure parameters for ros2 start ###################
-xfer_format   = 1    # 0-Pointcloud2(PointXYZRTL), 1-customized pointcloud format
-multi_topic   = 0    # 0-All LiDARs share the same topic, 1-One LiDAR one topic
-data_src      = 0    # 0-lidar, others-Invalid data src
-publish_freq  = 10.0 # freqency of publish, 5.0, 10.0, 20.0, 50.0, etc.
-output_type   = 0
-frame_id      = 'livox_frame'
-lvx_file_path = '/home/livox/livox_test.lvx'
-cmdline_bd_code = 'livox0000000001'
-
-cur_path = os.path.split(os.path.realpath(__file__))[0] + '/'
-cur_config_path = cur_path + '../config'
-rviz_config_path = os.path.join(cur_config_path, 'livox_lidar.rviz')
-user_config_path = os.path.join(cur_config_path, 'HAP_config.json')
-################### user configure parameters for ros2 end #####################
-
-livox_ros2_params = [
-    {"xfer_format": xfer_format},
-    {"multi_topic": multi_topic},
-    {"data_src": data_src},
-    {"publish_freq": publish_freq},
-    {"output_data_type": output_type},
-    {"frame_id": frame_id},
-    {"lvx_file_path": lvx_file_path},
-    {"user_config_path": user_config_path},
-    {"cmdline_input_bd_code": cmdline_bd_code}
-]
-
-
-def generate_launch_description():
-    livox_driver = Node(
-        package='livox_ros_driver2',
-        executable='livox_ros_driver2_node',
-        name='livox_lidar_publisher',
-        output='screen',
-        parameters=livox_ros2_params
-        )
-
-    return LaunchDescription([
-        livox_driver,
-        # launch.actions.RegisterEventHandler(
-        #     event_handler=launch.event_handlers.OnProcessExit(
-        #         target_action=livox_rviz,
-        #         on_exit=[
-        #             launch.actions.EmitEvent(event=launch.events.Shutdown()),
-        #         ]
-        #     )
-        # )
-    ])
diff --git a/launch_ROS2/msg_MID360_launch.py b/launch_ROS2/msg_MID360_launch.py
deleted file mode 100644
index 8492c49..0000000
--- a/launch_ROS2/msg_MID360_launch.py
+++ /dev/null
@@ -1,54 +0,0 @@
-import os
-from ament_index_python.packages import get_package_share_directory
-from launch import LaunchDescription
-from launch_ros.actions import Node
-import launch
-
-################### user configure parameters for ros2 start ###################
-xfer_format   = 1    # 0-Pointcloud2(PointXYZRTL), 1-customized pointcloud format
-multi_topic   = 0    # 0-All LiDARs share the same topic, 1-One LiDAR one topic
-data_src      = 0    # 0-lidar, others-Invalid data src
-publish_freq  = 10.0 # freqency of publish, 5.0, 10.0, 20.0, 50.0, etc.
-output_type   = 0
-frame_id      = 'livox_frame'
-lvx_file_path = '/home/livox/livox_test.lvx'
-cmdline_bd_code = 'livox0000000001'
-
-cur_path = os.path.split(os.path.realpath(__file__))[0] + '/'
-cur_config_path = cur_path + '../config'
-user_config_path = os.path.join(cur_config_path, 'MID360_config.json')
-################### user configure parameters for ros2 end #####################
-
-livox_ros2_params = [
-    {"xfer_format": xfer_format},
-    {"multi_topic": multi_topic},
-    {"data_src": data_src},
-    {"publish_freq": publish_freq},
-    {"output_data_type": output_type},
-    {"frame_id": frame_id},
-    {"lvx_file_path": lvx_file_path},
-    {"user_config_path": user_config_path},
-    {"cmdline_input_bd_code": cmdline_bd_code}
-]
-
-
-def generate_launch_description():
-    livox_driver = Node(
-        package='livox_ros_driver2',
-        executable='livox_ros_driver2_node',
-        name='livox_lidar_publisher',
-        output='screen',
-        parameters=livox_ros2_params
-        )
-
-    return LaunchDescription([
-        livox_driver,
-        # launch.actions.RegisterEventHandler(
-        #     event_handler=launch.event_handlers.OnProcessExit(
-        #         target_action=livox_rviz,
-        #         on_exit=[
-        #             launch.actions.EmitEvent(event=launch.events.Shutdown()),
-        #         ]
-        #     )
-        # )
-    ])
diff --git a/launch_ROS2/rviz_HAP_launch.py b/launch_ROS2/rviz_HAP_launch.py
deleted file mode 100644
index 834a545..0000000
--- a/launch_ROS2/rviz_HAP_launch.py
+++ /dev/null
@@ -1,63 +0,0 @@
-import os
-from ament_index_python.packages import get_package_share_directory
-from launch import LaunchDescription
-from launch_ros.actions import Node
-import launch
-
-################### user configure parameters for ros2 start ###################
-xfer_format   = 0    # 0-Pointcloud2(PointXYZRTL), 1-customized pointcloud format
-multi_topic   = 0    # 0-All LiDARs share the same topic, 1-One LiDAR one topic
-data_src      = 0    # 0-lidar, others-Invalid data src
-publish_freq  = 10.0 # freqency of publish, 5.0, 10.0, 20.0, 50.0, etc.
-output_type   = 0
-frame_id      = 'livox_frame'
-lvx_file_path = '/home/livox/livox_test.lvx'
-cmdline_bd_code = 'livox0000000001'
-
-cur_path = os.path.split(os.path.realpath(__file__))[0] + '/'
-cur_config_path = cur_path + '../config'
-rviz_config_path = os.path.join(cur_config_path, 'display_point_cloud_ROS2.rviz')
-user_config_path = os.path.join(cur_config_path, 'HAP_config.json')
-################### user configure parameters for ros2 end #####################
-
-livox_ros2_params = [
-    {"xfer_format": xfer_format},
-    {"multi_topic": multi_topic},
-    {"data_src": data_src},
-    {"publish_freq": publish_freq},
-    {"output_data_type": output_type},
-    {"frame_id": frame_id},
-    {"lvx_file_path": lvx_file_path},
-    {"user_config_path": user_config_path},
-    {"cmdline_input_bd_code": cmdline_bd_code}
-]
-
-
-def generate_launch_description():
-    livox_driver = Node(
-        package='livox_ros_driver2',
-        executable='livox_ros_driver2_node',
-        name='livox_lidar_publisher',
-        output='screen',
-        parameters=livox_ros2_params
-        )
-
-    livox_rviz = Node(
-            package='rviz2',
-            executable='rviz2',
-            output='screen',
-            arguments=['--display-config', rviz_config_path]
-        )
-
-    return LaunchDescription([
-        livox_driver,
-        livox_rviz,
-        # launch.actions.RegisterEventHandler(
-        #     event_handler=launch.event_handlers.OnProcessExit(
-        #         target_action=livox_rviz,
-        #         on_exit=[
-        #             launch.actions.EmitEvent(event=launch.events.Shutdown()),
-        #         ]
-        #     )
-        # )
-    ])
diff --git a/launch_ROS2/rviz_MID360_launch.py b/launch_ROS2/rviz_MID360_launch.py
deleted file mode 100644
index 31d3480..0000000
--- a/launch_ROS2/rviz_MID360_launch.py
+++ /dev/null
@@ -1,63 +0,0 @@
-import os
-from ament_index_python.packages import get_package_share_directory
-from launch import LaunchDescription
-from launch_ros.actions import Node
-import launch
-
-################### user configure parameters for ros2 start ###################
-xfer_format   = 0    # 0-Pointcloud2(PointXYZRTL), 1-customized pointcloud format
-multi_topic   = 0    # 0-All LiDARs share the same topic, 1-One LiDAR one topic
-data_src      = 0    # 0-lidar, others-Invalid data src
-publish_freq  = 10.0 # freqency of publish, 5.0, 10.0, 20.0, 50.0, etc.
-output_type   = 0
-frame_id      = 'livox_frame'
-lvx_file_path = '/home/livox/livox_test.lvx'
-cmdline_bd_code = 'livox0000000001'
-
-cur_path = os.path.split(os.path.realpath(__file__))[0] + '/'
-cur_config_path = cur_path + '../config'
-rviz_config_path = os.path.join(cur_config_path, 'display_point_cloud_ROS2.rviz')
-user_config_path = os.path.join(cur_config_path, 'MID360_config.json')
-################### user configure parameters for ros2 end #####################
-
-livox_ros2_params = [
-    {"xfer_format": xfer_format},
-    {"multi_topic": multi_topic},
-    {"data_src": data_src},
-    {"publish_freq": publish_freq},
-    {"output_data_type": output_type},
-    {"frame_id": frame_id},
-    {"lvx_file_path": lvx_file_path},
-    {"user_config_path": user_config_path},
-    {"cmdline_input_bd_code": cmdline_bd_code}
-]
-
-
-def generate_launch_description():
-    livox_driver = Node(
-        package='livox_ros_driver2',
-        executable='livox_ros_driver2_node',
-        name='livox_lidar_publisher',
-        output='screen',
-        parameters=livox_ros2_params
-        )
-
-    livox_rviz = Node(
-            package='rviz2',
-            executable='rviz2',
-            output='screen',
-            arguments=['--display-config', rviz_config_path]
-        )
-
-    return LaunchDescription([
-        livox_driver,
-        livox_rviz,
-        # launch.actions.RegisterEventHandler(
-        #     event_handler=launch.event_handlers.OnProcessExit(
-        #         target_action=livox_rviz,
-        #         on_exit=[
-        #             launch.actions.EmitEvent(event=launch.events.Shutdown()),
-        #         ]
-        #     )
-        # )
-    ])
diff --git a/launch_ROS2/rviz_mixed.py b/launch_ROS2/rviz_mixed.py
deleted file mode 100644
index 46a39c7..0000000
--- a/launch_ROS2/rviz_mixed.py
+++ /dev/null
@@ -1,63 +0,0 @@
-import os
-from ament_index_python.packages import get_package_share_directory
-from launch import LaunchDescription
-from launch_ros.actions import Node
-import launch
-
-################### user configure parameters for ros2 start ###################
-xfer_format   = 0    # 0-Pointcloud2(PointXYZRTL), 1-customized pointcloud format
-multi_topic   = 0    # 0-All LiDARs share the same topic, 1-One LiDAR one topic
-data_src      = 0    # 0-lidar, others-Invalid data src
-publish_freq  = 10.0 # freqency of publish, 5.0, 10.0, 20.0, 50.0, etc.
-output_type   = 0
-frame_id      = 'livox_frame'
-lvx_file_path = '/home/livox/livox_test.lvx'
-cmdline_bd_code = 'livox0000000001'
-
-cur_path = os.path.split(os.path.realpath(__file__))[0] + '/'
-cur_config_path = cur_path + '../config'
-rviz_config_path = os.path.join(cur_config_path, 'display_point_cloud_ROS2.rviz')
-user_config_path = os.path.join(cur_config_path, 'mixed_HAP_MID360_config.json')
-################### user configure parameters for ros2 end #####################
-
-livox_ros2_params = [
-    {"xfer_format": xfer_format},
-    {"multi_topic": multi_topic},
-    {"data_src": data_src},
-    {"publish_freq": publish_freq},
-    {"output_data_type": output_type},
-    {"frame_id": frame_id},
-    {"lvx_file_path": lvx_file_path},
-    {"user_config_path": user_config_path},
-    {"cmdline_input_bd_code": cmdline_bd_code}
-]
-
-
-def generate_launch_description():
-    livox_driver = Node(
-        package='livox_ros_driver2',
-        executable='livox_ros_driver2_node',
-        name='livox_lidar_publisher',
-        output='screen',
-        parameters=livox_ros2_params
-        )
-
-    livox_rviz = Node(
-            package='rviz2',
-            executable='rviz2',
-            output='screen',
-            arguments=['--display-config', rviz_config_path]
-        )
-
-    return LaunchDescription([
-        livox_driver,
-        livox_rviz,
-        # launch.actions.RegisterEventHandler(
-        #     event_handler=launch.event_handlers.OnProcessExit(
-        #         target_action=livox_rviz,
-        #         on_exit=[
-        #             launch.actions.EmitEvent(event=launch.events.Shutdown()),
-        #         ]
-        #     )
-        # )
-    ])
diff --git a/package_ROS2.xml b/package_ROS2.xml
deleted file mode 100644
index 96f5762..0000000
--- a/package_ROS2.xml
+++ /dev/null
@@ -1,35 +0,0 @@
-<?xml version="1.0"?>
-<?xml-model href="http://download.ros.org/schema/package_format3.xsd" schematypens="http://www.w3.org/2001/XMLSchema"?>
-<package format="3">
-  <name>livox_ros_driver2</name>
-  <version>1.0.0</version>
-  <description>The ROS device driver for Livox 3D LiDARs, for ROS2</description>
-  <maintainer email="dev@livoxtech.com">feng</maintainer>
-  <license>MIT</license>
-
-  <buildtool_depend>ament_cmake_auto</buildtool_depend>
-  <build_depend>rosidl_default_generators</build_depend>
-  <member_of_group>rosidl_interface_packages</member_of_group>
-
-  <depend>rclcpp</depend>
-  <depend>rclcpp_components</depend>
-  <depend>std_msgs</depend>
-  <depend>sensor_msgs</depend>
-  <depend>rcutils</depend>
-  <depend>pcl_conversions</depend>
-  <depend>rcl_interfaces</depend>
-  <depend>libpcl-all-dev</depend>
-
-  <exec_depend>rosbag2</exec_depend>
-  <exec_depend>rosidl_default_runtime</exec_depend>
-
-  <test_depend>ament_lint_auto</test_depend>
-  <test_depend>ament_lint_common</test_depend>
-
-  <depend>git</depend>
-  <depend>apr</depend>
-
-  <export>
-    <build_type>ament_cmake</build_type>
-  </export>
-</package>
