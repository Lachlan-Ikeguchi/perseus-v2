final: prev:
let
  # ros distro selection
  rosDistro = "humble";
  rosPkgs = prev.rosPackages.${rosDistro};

  # ros2nix autogenerated package overlay location
  packaging-overlay = import ./nix-packages/overlay.nix;
  # the final set of packages to be present in the ros namespace
  ros =
    rosPkgs
    # ros packaging fixes
    // {
      inherit joint-state-publisher-gui;
    }
    # add workspace packages
    // rosPkgs.overrideScope packaging-overlay;

  # --- ROS PACKAGE FIXES ---
  joint-state-publisher-gui = rosPkgs.joint-state-publisher-gui.overrideAttrs (
    {
      nativeBuildInputs ? [ ],
      qtWrapperArgs ? [ ],
      postFixup ? "",
      ...
    }:
    {
      dontWrapQtApps = false;
      nativeBuildInputs = nativeBuildInputs ++ [ prev.qt5.wrapQtAppsHook ];
      postFixup =
        postFixup
        + ''
          wrapQtApp "$out/lib/joint_state_publisher_gui/joint_state_publisher_gui"
        '';
    }
  );

  # --- OTHER PACKAGES ---
  # WIP experimental build with colcon derivation
  buildColconPackage = ros.callPackage ./build-colcon-package {
    inherit rosDistro;
    rosVersion = 2;
  };
  # mini package which puts COLCON_IGNORE in the output result folder
  # allows colcon build of workspace after run nix build
  colcon-ignore = prev.stdenv.mkDerivation {
    dontUnpack = true;
    name = "colcon-ignore";
    installPhase = ''
      mkdir -p $out
      touch $out/COLCON_IGNORE
    '';
  };
in
{
  # output package sets
  inherit ros colcon-ignore buildColconPackage;
  /*
    The intersection of the full custom package set and the workspace packages overlay
    selects the fully resolved packages out of the custom package set,
    getting us only the dev packages.

    That then gets merged with the colcon-ignore package so colcon doesn't try
    and build things from the (already built!) result symlink that nix build generates
  */
  # output dev packages to make workspace package selection easier
  devPackages = (builtins.intersectAttrs (packaging-overlay null null) final.ros) // {
    inherit colcon-ignore; # always include colcon-ignore in dev packages
  };
}
